plugins {
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "2.0.3"
}

version = "0.2"
group = "com.perujug.micronaut"

repositories {
    mavenCentral()
}

micronaut {
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.perujug.micronaut.*")
    }
}

dependencies {
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    runtimeOnly("org.slf4j:slf4j-simple")
    compileOnly("org.graalvm.nativeimage:svm")

    implementation("io.micronaut:micronaut-validation")

    implementation("io.micronaut.oraclecloud:micronaut-oraclecloud-function")

    implementation("com.fnproject.fn:api")

    runtimeOnly("com.fnproject.fn:runtime")

    testImplementation("com.fnproject.fn:testing-junit4")

    testImplementation("io.micronaut:micronaut-http-client")

}


application {
    mainClass.set("com.fnproject.fn.runtime.EntryPoint")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}


nativeImage {
    args("-H:+StaticExecutableWithDynamicLibC",
         "-Dfn.handler=com.perujug.micronaut.Function::handleRequest",
         "--initialize-at-build-time=com.perujug.micronaut")
}

dockerfileNative {
    args("-XX:MaximumHeapSizePercent=80")
    buildStrategy.set(io.micronaut.gradle.docker.DockerBuildStrategy.ORACLE_FUNCTION)
    defaultCommand.set("com.perujug.micronaut.Function::handleRequest")
    baseImage("frolvlad/alpine-glibc:alpine-3.12")
}

dockerfile {
    buildStrategy.set(io.micronaut.gradle.docker.DockerBuildStrategy.ORACLE_FUNCTION)
    defaultCommand.set("com.perujug.micronaut.Function::handleRequest")
}
dockerBuild {
    images = ["iad.ocir.io/idlhjo6dp3bd/fn-mn/$project.name:$project.version"]
}

dockerBuildNative {
    images = ["iad.ocir.io/idlhjo6dp3bd/fn-mn/$project.name-native:$project.version"]
}

tasks.named("assemble") {
    dependsOn(":shadowJar")
}